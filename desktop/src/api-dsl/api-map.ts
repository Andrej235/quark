export type ApiMap={"openapi":"3.1.0","info":{"title":"Quark Backend Open API","description":"This API handles backend/database operations.","license":{"name":"MIT","url":"https://opensource.org/licenses/MIT"},"version":"1.0"},"paths":{"/team-role/create":{"post":{"tags":[],"operationId":"team_role_create","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTeamRoleDTO"}}},"required":true},"responses":{"200":{"description":"Team role created"},"422":{"description":"Validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorDTO"}}}}}}},"/team/create":{"post":{"tags":[],"operationId":"team_create","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTeamDTO"}}},"required":true},"responses":{"200":{"description":"Team created"},"422":{"description":"Validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorDTO"}}}}}}},"/team/delete/{team_id}":{"delete":{"tags":[],"operationId":"team_delete","parameters":[{"name":"team_id","in":"path","description":"ID of the team to delete","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Team delete"}}}},"/user/check":{"get":{"tags":[],"operationId":"check","responses":{"200":{"description":"User logged in"},"401":{"description":"User not logged in"}}}},"/user/email/send-verification":{"get":{"tags":[],"operationId":"send_email_verification","responses":{"200":{"description":"Email sent"},"400":{"description":"Possible messages: User already verified","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SRouteError"}}}}}}},"/user/email/verify/{token}":{"get":{"tags":[],"operationId":"verify_email","parameters":[{"name":"token","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Email verified"},"400":{"description":"Possible messages: User already verified","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SRouteError"}}}},"401":{"description":"Possible messages: User not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SRouteError"}}}}}}},"/user/login":{"post":{"tags":[],"operationId":"user_log_in","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginUserDTO"}}},"required":true},"responses":{"200":{"description":"User logged in","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogInResultDTO"}}}},"400":{"description":"Possible errors: Wrong password, User not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SRouteError"}}}},"422":{"description":"Validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorDTO"}}}}}}},"/user/logout/{refresh_token_id}":{"post":{"tags":[],"operationId":"user_log_out","parameters":[{"name":"refresh_token_id","in":"path","description":"Refresh token id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"User logged out"}}}},"/user/refresh":{"post":{"tags":[],"operationId":"user_refresh","responses":{"200":{"description":"Token pair refreshed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JWTRefreshTokenPairDTO"}}}},"401":{"description":"Possible messages: Invalid JWT token, \n                                                         Invalid Refresh token, \n                                                         Expired Refresh token,\n                                                         Mismatched user and refresh token,\n                                                         Mismatched claim and refresh token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SRouteError"}}}},"422":{"description":"Validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorDTO"}}}}}}},"/user/reset-password":{"post":{"tags":[],"operationId":"user_password_reset","responses":{"200":{"description":"Password reset"},"400":{"description":"Possible messages: Wrong password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SRouteError"}}}},"422":{"description":"Validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorDTO"}}}}}}},"/user/signup":{"post":{"tags":[],"operationId":"user_sign_up","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserDTO"}}},"required":true},"responses":{"200":{"description":"User created"},"400":{"description":"Possible errors: User already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SRouteError"}}}},"422":{"description":"Validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorDTO"}}}}}}},"/user/update":{"put":{"tags":[],"operationId":"user_update","responses":{"200":{"description":"User updated"},"422":{"description":"Validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorDTO"}}}}}}}},"components":{"schemas":{"CreateTeamDTO":{"type":"object","required":["name"],"properties":{"description":{"type":["string","null"]},"name":{"type":"string"}}},"CreateTeamRoleDTO":{"type":"object","required":["name","team_id"],"properties":{"name":{"type":"string"},"team_id":{"type":"string","format":"uuid"}}},"CreateUserDTO":{"type":"object","required":["username","name","last_name","email","password"],"properties":{"email":{"type":"string"},"last_name":{"type":"string"},"name":{"type":"string"},"password":{"type":"string"},"username":{"type":"string"}}},"ErrorInfo":{"type":"object","required":["code","params"],"properties":{"code":{"type":"string"},"message":{"type":["string","null"]},"params":{"type":"object","additionalProperties":{},"propertyNames":{"type":"string"}}}},"FieldErrorInfo":{"type":"object","required":["field","errors_info"],"properties":{"errors_info":{"type":"array","items":{"$ref":"#/components/schemas/ErrorInfo"}},"field":{"type":"string"}}},"JWTRefreshTokenPairDTO":{"type":"object","required":["jwt_token","refresh_token_id"],"properties":{"jwt_token":{"type":"string"},"refresh_token_id":{"type":"string","format":"uuid"}}},"LogInResultDTO":{"type":"object","required":["jwt_token","refresh_token_id"],"properties":{"jwt_token":{"type":"string"},"refresh_token_id":{"type":"string","format":"uuid"}}},"LoginUserDTO":{"type":"object","required":["email","password"],"properties":{"email":{"type":"string"},"password":{"type":"string"}}},"PasswordResetDTO":{"type":"object","required":["old_password","new_password"],"properties":{"new_password":{"type":"string"},"old_password":{"type":"string"}}},"SRouteError":{"type":"object","description":"This is used when BadRequest or InternalServerError is returned from api endpoint","required":["message"],"properties":{"message":{"type":"string"}}},"ValidationErrorDTO":{"type":"object","required":["errors"],"properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/FieldErrorInfo"}}}}}}}
